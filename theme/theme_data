
import 'package:flutter/material.dart';
import 'package:glassify/theme/color_scheme.dart';


/*
 final bool useInkSparkle = platform == TargetPlatform.android && !kIsWeb;
splashFactory ??=
  useMaterial3
    ? useInkSparkle
        ? InkSparkle.splashFactory
        : InkRipple.splashFactory
    : InkSplash.splashFactory;
*/

ThemeData getThemeData(ColorScheme colorScheme) {
  return ThemeData(
    colorScheme: colorScheme,
    textTheme: _textThemeMobile,
    splashFactory: InkRipple.splashFactory,
    useMaterial3: true,
    elevatedButtonTheme: ElevatedButtonThemeData(
      style: ElevatedButton.styleFrom(
        backgroundColor: colorScheme.primary,
        foregroundColor: colorScheme.onPrimary,
        side: BorderSide.none,
        shape: ContinuousRectangleBorder(
          side: BorderSide(color: colorScheme.onPrimary, width: 1.50),
          borderRadius: BorderRadius.circular(10.0),
        ),
      ),
    ),
    outlinedButtonTheme: OutlinedButtonThemeData(
      style: OutlinedButton.styleFrom(
        backgroundColor: Colors.transparent,
        foregroundColor: colorScheme.primary,
        alignment: Alignment.center,
        side: BorderSide(color: colorScheme.primary, width: 1.50),
        padding: const EdgeInsets.all(0.0),
        shape: ContinuousRectangleBorder(
          side: BorderSide(color: colorScheme.primary, width: 1.50),
          borderRadius: BorderRadius.circular(10.0),
        ),
        textStyle: TextStyle(
          fontWeight: FontWeight.bold,
          color: colorScheme.primary,
        ),
      ),
    ),
    dialogTheme: DialogThemeData(
      backgroundColor: colorScheme.surfaceContainer,
      surfaceTintColor: colorScheme.onSurfaceVariant,
      insetPadding: const EdgeInsets.all(0.0),
      actionsPadding: const EdgeInsets.all(4.0),
      alignment: Alignment.center,
      shape: ContinuousRectangleBorder(
        side: BorderSide(color: colorScheme.primary),
        borderRadius: BorderRadius.all(Radius.circular(20)),
      ),
    ),
    bottomNavigationBarTheme: BottomNavigationBarThemeData(
      elevation: 0.0,
      type: BottomNavigationBarType.fixed,
      unselectedItemColor: colorScheme.onPrimaryContainer,
      selectedItemColor: colorScheme.primary,
      showSelectedLabels: true,
    ),
    floatingActionButtonTheme: FloatingActionButtonThemeData(
      backgroundColor: colorScheme.primary,
      foregroundColor: colorScheme.onPrimary,
      iconSize: 26,
    ),
  );

}

ThemeData get lightTheme {
  return getThemeData(lightColorScheme);
}


ThemeData get darkTheme {
  return getThemeData(darkColorScheme);
}



TextTheme get _textThemeMobile {
  return const TextTheme(
    titleLarge: TextStyle(
      fontSize: 22,
      fontWeight: FontWeight.bold,
    ),
    titleMedium: TextStyle(
      fontSize: 18,
      fontWeight: FontWeight.bold,
    ),
    titleSmall: TextStyle(
      fontSize: 14,
      fontWeight: FontWeight.bold,
    ),
    bodyLarge: TextStyle(
      fontSize: 17,
      fontWeight: FontWeight.bold,
    ),
    bodyMedium: TextStyle(
      fontSize: 12,
      fontWeight: FontWeight.bold,
    ),
    bodySmall: TextStyle(
      fontSize: 9,
      fontWeight: FontWeight.bold,
    ),
    displayLarge: TextStyle(
      fontSize: 15,
      fontWeight: FontWeight.bold,
    ),
    displayMedium: TextStyle(
      fontSize: 13,
      fontWeight: FontWeight.bold,
    ),
    displaySmall: TextStyle(
      fontSize: 10,
      fontWeight: FontWeight.bold,
    ),
    labelLarge: TextStyle(
      fontWeight: FontWeight.bold,
    ),
    labelMedium: TextStyle(
      fontWeight: FontWeight.bold,
    ),
    labelSmall: TextStyle(
      fontWeight: FontWeight.bold,
    ),
  );
}
